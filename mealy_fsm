// 1010 overlapping
module seqdet(
input clk,rst,in,
output reg op);
  parameter s0=2'b00,s1=2'b01,s2=2'b10,s3=2'b11;
  reg [1:0]cstate,nstate;
  always@(posedge clk or posedge rst)
    begin 
      if(rst)
        cstate=s0;
      else
        cstate=nstate;
    end
  always@(*)
    begin
      case(cstate)
        s0:  if(in) begin
             nstate<=s1;
              op<=0;
              end
             else begin
               nstate<=s0;
               op<=0;
             end
        s1:  if(in) begin
             nstate<=s1;
              op<=0;
              end
             else begin
               nstate<=s2;
               op<=0;
             end
          s2: if(in) begin
             nstate<=s3;
              op<=0;
              end
             else begin
               nstate<=s0;
               op<=0;
             end
        s3: if(in) begin
             nstate<=s1;
              op<=0;
              end
             else begin
               nstate<=s2;
               op<=1;
             end
        
        default :nstate<=s0;
      endcase
    end
  
endmodule
   
 // Code your testbench here
// or browse Examples
module tb;
  reg clk,rst,in;
  wire op;
  initial begin
    clk=0;
    forever #5 clk=~clk;
  end
  seqdet s(clk,rst,in,op);
  initial begin 
    $monitor("in=%b,op=%b",in,op);
  
  end
  initial begin
    in=0;
    rst=1;
    #30 rst = 0;
    #40 in = 0;
    #10 in = 1;
    #10 in = 0;
    #10 in = 1;
    #10 in = 0;
    #10 in = 1;
    #10 in = 0;
    #10 in = 1;
    #10 in = 0;
    #10 in = 1;
    #10 in = 1;
    #10 in = 0;
    
    
    #200 $finish;
    
  end
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars;
  end
  
endmodule



