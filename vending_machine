// Code your design here
// 00=0rs,01=5rs,10=10rs,p-product=15rs
module vendingmachine(
  input clk,rst,[1:0]in,
  output reg [1:0]p,change

);
  reg[1:0]pstate,nstate;
  parameter s0='b00,s1='b01,s2='b10;
  always@(posedge clk)begin
    if(rst)
    pstate<=s0;
    else
      pstate<=nstate;
      
  end
  
  always@(*)begin
    case(pstate)
      s0:case(in)
        2'b00:begin 
          nstate<=s0;
          p<=0;
          change<=0;
        end
        2'b01:begin 
          nstate<=s1;
          p<=0;
          change<=0;
        end
        2'b10: begin 
          nstate<=s2;
          p<=0;
          change<=0;
        end
      endcase
      s1:case(in)
        2'b00:begin 
          nstate<=s0;
          p<=0;
          change<=2'b01;
        end
        2'b01:begin
          nstate<=s2;
          p<=0;
          change<=0;
        end
        2'b10:begin
          nstate<=s0;
          p<=1;
          change<=0;
        end
      endcase
      s2:case(in)
        2'b00:begin
          nstate<=s0;
          p<=0;
          change<=2'b10;
        end
        2'b01:begin
          nstate<=s0;
          p<=1;
          change<=0;
        end
        2'b10:begin
          nstate<=s0;
          p<=1;
          change<=2'b01;
        end
      endcase
      default:nstate<=s0;
    
    
      endcase
    
    
  end
endmodule

// Code your testbench here
// or browse Examples

module tb;
  reg clk,rst;reg [1:0]in;
  wire [1:0]p,change;
  initial begin
    clk=0;
    forever #5 clk=~clk;
  end
  vendingmachine dut(clk,rst,in,p,change);
  initial begin 
    $monitor("in=%b,p=%b,change:%b",in,p,change);
  
  end
  initial begin
    in=0;
    rst=1;
    #30 rst = 0;
    for(int i=0;i<10;i++)begin
      in=$urandom_range(0,2);
      #10;
    end
    
    
    $finish;
    
  end
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars;
  end
  
endmodule
